generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model invoice_products {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id BigInt     @db.UnsignedBigInt 
  product_id BigInt     @unique
  user_id    BigInt     @db.UnsignedBigInt
  qty        String     @db.VarChar(50)
  sale_price String     @db.VarChar(50)
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  users      users      @relation(fields: [user_id], references: [id], map: "invoice_products_user_id_foreign")
  invoice    invoice    @relation(fields: [invoice_id], references: [id])
  products   products   @relation(fields: [product_id], references: [id])
}

model products {
  id           BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  user_id      BigInt     @db.UnsignedBigInt 
  category_id  BigInt     @db.UnsignedBigInt 
  name         String     @db.VarChar(50)
  price        String     @db.VarChar(50)
  unit         String     @db.VarChar(50)
  img_url      String     @db.VarChar(500)
  created_at   DateTime   @default(now()) @db.Timestamp(0)
  updated_at   DateTime   @default(now()) @db.Timestamp(0)
  users        users      @relation(fields: [user_id], references: [id], map: "Products_user_id_foreign")
  categories  categories  @relation(fields: [category_id], references: [id], map: "category_user_id_foreign")
  invoice_products invoice_products?
  
}

model invoice {
  id             BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  total          String            @db.VarChar(100)
  discount       String            @db.VarChar(500)
  vat            String            @db.VarChar(50)
  payable        String            @db.VarChar(50)
  user_id        BigInt            @db.UnsignedBigInt 
  customer_id    BigInt            @db.UnsignedBigInt 
  created_at     DateTime          @default(now()) @db.Timestamp(0)
  updated_at     DateTime          @default(now()) @db.Timestamp(0)
  users          users             @relation(fields: [user_id], references: [id], map: "invoice_user_id_foreign")
  customers      customers         @relation(fields: [customer_id], references: [id], map: "customer_id_foreign")
  invoice_products invoice_products[]
}

model categories {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name       String     @db.VarChar(50)
  user_id    BigInt     @db.UnsignedBigInt 
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  users      users      @relation(fields: [user_id], references: [id], map: "categories_user_id_foreign")
  products    products[]
}

model customers {
  id              BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  name            String                   @db.VarChar(50)
  email           String                   @db.VarChar(50)
  mobile          String                   @db.VarChar(50)
  user_id         BigInt                   @db.UnsignedBigInt 
  created_at      DateTime                 @default(now()) @db.Timestamp(0)
  updated_at      DateTime                 @default(now()) @db.Timestamp(0)    
  users           users                    @relation(fields: [user_id], references: [id], map: "customers_user_id_foreign")
  invoice    invoice[]
}
model users {
   id                BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
   firstName         String                  @db.VarChar(50)
   LastName          String                   @db.VarChar(50)
   email             String                   @db.VarChar(50)
   mobile            String                   @db.VarChar(50)
   password          String                   @db.VarChar(50)
   otp               String                   @db.VarChar(50)
   created_at        DateTime                 @default(now()) @db.Timestamp(0)
   updated_at        DateTime                 @default(now()) @db.Timestamp(0)
   customers         customers[]
   categories        categories[]
   invoice    invoice[]
   invoice_products  invoice_products[]
   products	products[]
}



 




